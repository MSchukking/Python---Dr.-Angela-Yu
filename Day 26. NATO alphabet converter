# sa apr 2, 2022
# day 26: NATO alphabet converter
# OBJECTIVES: create a NATO alphabet converter while applying list comprehension and dictionary/dataframe comprehension
# Contains the files: main.py and nato_phonetic_alphabet.csv


# main.py: 

import pandas

nato_alphabet_df = pandas.read_csv("nato_phonetic_alphabet.csv")  # imported csv as type "pandas.core.frame.DataFrame"

# TODO 1. convert the alphabet.csv into a dictionary: the keys are the letters and the values are the corresponding
#  code words: {"A": "Alfa", "B": "Bravo"}
nato_alphabet_dict = {
    row.letter: row.code for (index, row) in nato_alphabet_df.iterrows()
}

# TODO 2. Create a list of the phonetic code words from a word that the user inputs.
# input question is: "Enter a word:"
# output is a list of the code words
user_answer = input("Enter a word: ").upper()  # as a string in upper case
answer_list = [nato_alphabet_dict[letter] for letter in user_answer if letter != " "]  # converts the string
# user_answer into a list with nato alphabet words 
print(answer_list)


# nato_phonetic_alphabet.csv: 

letter,code
A,Alfa
B,Bravo
C,Charlie
D,Delta
E,Echo
F,Foxtrot
G,Golf
H,Hotel
I,India
J,Juliet
K,Kilo
L,Lima
M,Mike
N,November
O,Oscar
P,Papa
Q,Quebec
R,Romeo
S,Sierra
T,Tango
U,Uniform
V,Victor
W,Whiskey
X,X-ray
Y,Yankee
Z,Zulu
